Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    HASH
    ID
    INT
    L_CURLY
    L_PAREN
    MULTIPLY
    R_CURLY
    R_PAREN

Grammar

Rule 0     S' -> base
Rule 1     base -> expression
Rule 2     base -> empty
Rule 3     expression -> expression R_ANGLE expression
Rule 4     expression -> expression SIBLING expression
Rule 5     expression -> expression CLIMB expression
Rule 6     expression -> NAME
Rule 7     NAME -> DIV
Rule 8     NAME -> SPAN
Rule 9     NAME -> P
Rule 10    NAME -> H1
Rule 11    NAME -> H2
Rule 12    NAME -> H3
Rule 13    NAME -> H4
Rule 14    NAME -> H5
Rule 15    NAME -> H6
Rule 16    NAME -> UL
Rule 17    NAME -> LI
Rule 18    NAME -> TABLE
Rule 19    NAME -> TD
Rule 20    NAME -> TR
Rule 21    NAME -> IMG
Rule 22    NAME -> BR
Rule 23    empty -> <empty>

Terminals, with rules where they appear

BR                   : 22
CLIMB                : 5
DIV                  : 7
DOT                  : 
H1                   : 10
H2                   : 11
H3                   : 12
H4                   : 13
H5                   : 14
H6                   : 15
HASH                 : 
ID                   : 
IMG                  : 21
INT                  : 
LI                   : 17
L_CURLY              : 
L_PAREN              : 
MULTIPLY             : 
P                    : 9
R_ANGLE              : 3
R_CURLY              : 
R_PAREN              : 
SIBLING              : 4
SPAN                 : 8
TABLE                : 18
TD                   : 19
TR                   : 20
UL                   : 16
error                : 

Nonterminals, with rules where they appear

NAME                 : 6
base                 : 0
empty                : 2
expression           : 1 3 3 4 4 5 5

Parsing method: LALR

state 0

    (0) S' -> . base
    (1) base -> . expression
    (2) base -> . empty
    (3) expression -> . expression R_ANGLE expression
    (4) expression -> . expression SIBLING expression
    (5) expression -> . expression CLIMB expression
    (6) expression -> . NAME
    (23) empty -> .
    (7) NAME -> . DIV
    (8) NAME -> . SPAN
    (9) NAME -> . P
    (10) NAME -> . H1
    (11) NAME -> . H2
    (12) NAME -> . H3
    (13) NAME -> . H4
    (14) NAME -> . H5
    (15) NAME -> . H6
    (16) NAME -> . UL
    (17) NAME -> . LI
    (18) NAME -> . TABLE
    (19) NAME -> . TD
    (20) NAME -> . TR
    (21) NAME -> . IMG
    (22) NAME -> . BR

    $end            reduce using rule 23 (empty -> .)
    DIV             shift and go to state 5
    SPAN            shift and go to state 6
    P               shift and go to state 7
    H1              shift and go to state 8
    H2              shift and go to state 9
    H3              shift and go to state 10
    H4              shift and go to state 11
    H5              shift and go to state 12
    H6              shift and go to state 13
    UL              shift and go to state 14
    LI              shift and go to state 15
    TABLE           shift and go to state 16
    TD              shift and go to state 17
    TR              shift and go to state 18
    IMG             shift and go to state 19
    BR              shift and go to state 20

    base                           shift and go to state 1
    expression                     shift and go to state 2
    empty                          shift and go to state 3
    NAME                           shift and go to state 4

state 1

    (0) S' -> base .



state 2

    (1) base -> expression .
    (3) expression -> expression . R_ANGLE expression
    (4) expression -> expression . SIBLING expression
    (5) expression -> expression . CLIMB expression

    $end            reduce using rule 1 (base -> expression .)
    R_ANGLE         shift and go to state 21
    SIBLING         shift and go to state 22
    CLIMB           shift and go to state 23


state 3

    (2) base -> empty .

    $end            reduce using rule 2 (base -> empty .)


state 4

    (6) expression -> NAME .

    R_ANGLE         reduce using rule 6 (expression -> NAME .)
    SIBLING         reduce using rule 6 (expression -> NAME .)
    CLIMB           reduce using rule 6 (expression -> NAME .)
    $end            reduce using rule 6 (expression -> NAME .)


state 5

    (7) NAME -> DIV .

    R_ANGLE         reduce using rule 7 (NAME -> DIV .)
    SIBLING         reduce using rule 7 (NAME -> DIV .)
    CLIMB           reduce using rule 7 (NAME -> DIV .)
    $end            reduce using rule 7 (NAME -> DIV .)


state 6

    (8) NAME -> SPAN .

    R_ANGLE         reduce using rule 8 (NAME -> SPAN .)
    SIBLING         reduce using rule 8 (NAME -> SPAN .)
    CLIMB           reduce using rule 8 (NAME -> SPAN .)
    $end            reduce using rule 8 (NAME -> SPAN .)


state 7

    (9) NAME -> P .

    R_ANGLE         reduce using rule 9 (NAME -> P .)
    SIBLING         reduce using rule 9 (NAME -> P .)
    CLIMB           reduce using rule 9 (NAME -> P .)
    $end            reduce using rule 9 (NAME -> P .)


state 8

    (10) NAME -> H1 .

    R_ANGLE         reduce using rule 10 (NAME -> H1 .)
    SIBLING         reduce using rule 10 (NAME -> H1 .)
    CLIMB           reduce using rule 10 (NAME -> H1 .)
    $end            reduce using rule 10 (NAME -> H1 .)


state 9

    (11) NAME -> H2 .

    R_ANGLE         reduce using rule 11 (NAME -> H2 .)
    SIBLING         reduce using rule 11 (NAME -> H2 .)
    CLIMB           reduce using rule 11 (NAME -> H2 .)
    $end            reduce using rule 11 (NAME -> H2 .)


state 10

    (12) NAME -> H3 .

    R_ANGLE         reduce using rule 12 (NAME -> H3 .)
    SIBLING         reduce using rule 12 (NAME -> H3 .)
    CLIMB           reduce using rule 12 (NAME -> H3 .)
    $end            reduce using rule 12 (NAME -> H3 .)


state 11

    (13) NAME -> H4 .

    R_ANGLE         reduce using rule 13 (NAME -> H4 .)
    SIBLING         reduce using rule 13 (NAME -> H4 .)
    CLIMB           reduce using rule 13 (NAME -> H4 .)
    $end            reduce using rule 13 (NAME -> H4 .)


state 12

    (14) NAME -> H5 .

    R_ANGLE         reduce using rule 14 (NAME -> H5 .)
    SIBLING         reduce using rule 14 (NAME -> H5 .)
    CLIMB           reduce using rule 14 (NAME -> H5 .)
    $end            reduce using rule 14 (NAME -> H5 .)


state 13

    (15) NAME -> H6 .

    R_ANGLE         reduce using rule 15 (NAME -> H6 .)
    SIBLING         reduce using rule 15 (NAME -> H6 .)
    CLIMB           reduce using rule 15 (NAME -> H6 .)
    $end            reduce using rule 15 (NAME -> H6 .)


state 14

    (16) NAME -> UL .

    R_ANGLE         reduce using rule 16 (NAME -> UL .)
    SIBLING         reduce using rule 16 (NAME -> UL .)
    CLIMB           reduce using rule 16 (NAME -> UL .)
    $end            reduce using rule 16 (NAME -> UL .)


state 15

    (17) NAME -> LI .

    R_ANGLE         reduce using rule 17 (NAME -> LI .)
    SIBLING         reduce using rule 17 (NAME -> LI .)
    CLIMB           reduce using rule 17 (NAME -> LI .)
    $end            reduce using rule 17 (NAME -> LI .)


state 16

    (18) NAME -> TABLE .

    R_ANGLE         reduce using rule 18 (NAME -> TABLE .)
    SIBLING         reduce using rule 18 (NAME -> TABLE .)
    CLIMB           reduce using rule 18 (NAME -> TABLE .)
    $end            reduce using rule 18 (NAME -> TABLE .)


state 17

    (19) NAME -> TD .

    R_ANGLE         reduce using rule 19 (NAME -> TD .)
    SIBLING         reduce using rule 19 (NAME -> TD .)
    CLIMB           reduce using rule 19 (NAME -> TD .)
    $end            reduce using rule 19 (NAME -> TD .)


state 18

    (20) NAME -> TR .

    R_ANGLE         reduce using rule 20 (NAME -> TR .)
    SIBLING         reduce using rule 20 (NAME -> TR .)
    CLIMB           reduce using rule 20 (NAME -> TR .)
    $end            reduce using rule 20 (NAME -> TR .)


state 19

    (21) NAME -> IMG .

    R_ANGLE         reduce using rule 21 (NAME -> IMG .)
    SIBLING         reduce using rule 21 (NAME -> IMG .)
    CLIMB           reduce using rule 21 (NAME -> IMG .)
    $end            reduce using rule 21 (NAME -> IMG .)


state 20

    (22) NAME -> BR .

    R_ANGLE         reduce using rule 22 (NAME -> BR .)
    SIBLING         reduce using rule 22 (NAME -> BR .)
    CLIMB           reduce using rule 22 (NAME -> BR .)
    $end            reduce using rule 22 (NAME -> BR .)


state 21

    (3) expression -> expression R_ANGLE . expression
    (3) expression -> . expression R_ANGLE expression
    (4) expression -> . expression SIBLING expression
    (5) expression -> . expression CLIMB expression
    (6) expression -> . NAME
    (7) NAME -> . DIV
    (8) NAME -> . SPAN
    (9) NAME -> . P
    (10) NAME -> . H1
    (11) NAME -> . H2
    (12) NAME -> . H3
    (13) NAME -> . H4
    (14) NAME -> . H5
    (15) NAME -> . H6
    (16) NAME -> . UL
    (17) NAME -> . LI
    (18) NAME -> . TABLE
    (19) NAME -> . TD
    (20) NAME -> . TR
    (21) NAME -> . IMG
    (22) NAME -> . BR

    DIV             shift and go to state 5
    SPAN            shift and go to state 6
    P               shift and go to state 7
    H1              shift and go to state 8
    H2              shift and go to state 9
    H3              shift and go to state 10
    H4              shift and go to state 11
    H5              shift and go to state 12
    H6              shift and go to state 13
    UL              shift and go to state 14
    LI              shift and go to state 15
    TABLE           shift and go to state 16
    TD              shift and go to state 17
    TR              shift and go to state 18
    IMG             shift and go to state 19
    BR              shift and go to state 20

    expression                     shift and go to state 24
    NAME                           shift and go to state 4

state 22

    (4) expression -> expression SIBLING . expression
    (3) expression -> . expression R_ANGLE expression
    (4) expression -> . expression SIBLING expression
    (5) expression -> . expression CLIMB expression
    (6) expression -> . NAME
    (7) NAME -> . DIV
    (8) NAME -> . SPAN
    (9) NAME -> . P
    (10) NAME -> . H1
    (11) NAME -> . H2
    (12) NAME -> . H3
    (13) NAME -> . H4
    (14) NAME -> . H5
    (15) NAME -> . H6
    (16) NAME -> . UL
    (17) NAME -> . LI
    (18) NAME -> . TABLE
    (19) NAME -> . TD
    (20) NAME -> . TR
    (21) NAME -> . IMG
    (22) NAME -> . BR

    DIV             shift and go to state 5
    SPAN            shift and go to state 6
    P               shift and go to state 7
    H1              shift and go to state 8
    H2              shift and go to state 9
    H3              shift and go to state 10
    H4              shift and go to state 11
    H5              shift and go to state 12
    H6              shift and go to state 13
    UL              shift and go to state 14
    LI              shift and go to state 15
    TABLE           shift and go to state 16
    TD              shift and go to state 17
    TR              shift and go to state 18
    IMG             shift and go to state 19
    BR              shift and go to state 20

    expression                     shift and go to state 25
    NAME                           shift and go to state 4

state 23

    (5) expression -> expression CLIMB . expression
    (3) expression -> . expression R_ANGLE expression
    (4) expression -> . expression SIBLING expression
    (5) expression -> . expression CLIMB expression
    (6) expression -> . NAME
    (7) NAME -> . DIV
    (8) NAME -> . SPAN
    (9) NAME -> . P
    (10) NAME -> . H1
    (11) NAME -> . H2
    (12) NAME -> . H3
    (13) NAME -> . H4
    (14) NAME -> . H5
    (15) NAME -> . H6
    (16) NAME -> . UL
    (17) NAME -> . LI
    (18) NAME -> . TABLE
    (19) NAME -> . TD
    (20) NAME -> . TR
    (21) NAME -> . IMG
    (22) NAME -> . BR

    DIV             shift and go to state 5
    SPAN            shift and go to state 6
    P               shift and go to state 7
    H1              shift and go to state 8
    H2              shift and go to state 9
    H3              shift and go to state 10
    H4              shift and go to state 11
    H5              shift and go to state 12
    H6              shift and go to state 13
    UL              shift and go to state 14
    LI              shift and go to state 15
    TABLE           shift and go to state 16
    TD              shift and go to state 17
    TR              shift and go to state 18
    IMG             shift and go to state 19
    BR              shift and go to state 20

    expression                     shift and go to state 26
    NAME                           shift and go to state 4

state 24

    (3) expression -> expression R_ANGLE expression .
    (3) expression -> expression . R_ANGLE expression
    (4) expression -> expression . SIBLING expression
    (5) expression -> expression . CLIMB expression

  ! shift/reduce conflict for R_ANGLE resolved as shift
  ! shift/reduce conflict for SIBLING resolved as shift
  ! shift/reduce conflict for CLIMB resolved as shift
    $end            reduce using rule 3 (expression -> expression R_ANGLE expression .)
    R_ANGLE         shift and go to state 21
    SIBLING         shift and go to state 22
    CLIMB           shift and go to state 23

  ! R_ANGLE         [ reduce using rule 3 (expression -> expression R_ANGLE expression .) ]
  ! SIBLING         [ reduce using rule 3 (expression -> expression R_ANGLE expression .) ]
  ! CLIMB           [ reduce using rule 3 (expression -> expression R_ANGLE expression .) ]


state 25

    (4) expression -> expression SIBLING expression .
    (3) expression -> expression . R_ANGLE expression
    (4) expression -> expression . SIBLING expression
    (5) expression -> expression . CLIMB expression

  ! shift/reduce conflict for R_ANGLE resolved as shift
  ! shift/reduce conflict for SIBLING resolved as shift
  ! shift/reduce conflict for CLIMB resolved as shift
    $end            reduce using rule 4 (expression -> expression SIBLING expression .)
    R_ANGLE         shift and go to state 21
    SIBLING         shift and go to state 22
    CLIMB           shift and go to state 23

  ! R_ANGLE         [ reduce using rule 4 (expression -> expression SIBLING expression .) ]
  ! SIBLING         [ reduce using rule 4 (expression -> expression SIBLING expression .) ]
  ! CLIMB           [ reduce using rule 4 (expression -> expression SIBLING expression .) ]


state 26

    (5) expression -> expression CLIMB expression .
    (3) expression -> expression . R_ANGLE expression
    (4) expression -> expression . SIBLING expression
    (5) expression -> expression . CLIMB expression

  ! shift/reduce conflict for R_ANGLE resolved as shift
  ! shift/reduce conflict for SIBLING resolved as shift
  ! shift/reduce conflict for CLIMB resolved as shift
    $end            reduce using rule 5 (expression -> expression CLIMB expression .)
    R_ANGLE         shift and go to state 21
    SIBLING         shift and go to state 22
    CLIMB           shift and go to state 23

  ! R_ANGLE         [ reduce using rule 5 (expression -> expression CLIMB expression .) ]
  ! SIBLING         [ reduce using rule 5 (expression -> expression CLIMB expression .) ]
  ! CLIMB           [ reduce using rule 5 (expression -> expression CLIMB expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_ANGLE in state 24 resolved as shift
WARNING: shift/reduce conflict for SIBLING in state 24 resolved as shift
WARNING: shift/reduce conflict for CLIMB in state 24 resolved as shift
WARNING: shift/reduce conflict for R_ANGLE in state 25 resolved as shift
WARNING: shift/reduce conflict for SIBLING in state 25 resolved as shift
WARNING: shift/reduce conflict for CLIMB in state 25 resolved as shift
WARNING: shift/reduce conflict for R_ANGLE in state 26 resolved as shift
WARNING: shift/reduce conflict for SIBLING in state 26 resolved as shift
WARNING: shift/reduce conflict for CLIMB in state 26 resolved as shift
